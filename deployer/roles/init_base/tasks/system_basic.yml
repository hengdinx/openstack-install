---

#- name: render /etc/hosts
#  template: src=hosts.j2 dest=/etc/hosts

- block:
  - name: remove /etc/httpd/conf.d/wsgi-keystone.conf
    file: path=/etc/httpd/conf.d/wsgi-keystone.conf state=absent
  
  - name: start httpd service
    service: name=httpd state=started enabled=yes
  when: 'action_type == "install" or action_type == "init"'

#- name: modify /etc/hosts
#  blockinfile:
#    path: /etc/hosts
#    marker: "#{mark} ANSIBLE MANAGED BLOCK FOR hosts"
#    block: |
#     127.0.0.1       localhost.localdomain localhost
#     ::1     localhost6.localdomain6 localhost6
#     {% if mg_ip != "" and mg_ip != None %}
#     {{ deploy_ip_mg }} {{ deploy_hostname }}
#     {% elif sto_ip != "" and sto_ip != None %}
#     {{ deploy_ip_sto }} {{ deploy_hostname }}
#     {% endif %}
#     {% for i in controllers %}
#     {{ i['cluster_ip'] }} {{ i['hostname'] }} {{ i['hostname'] }}.{{ i['domain'] }}
#     {% endfor %}
#     {% for i in computes %}
#     {{ i['cluster_ip'] }} {{ i['hostname'] }} {{ i['hostname'] }}.{{ i['domain'] }}
#     {% endfor %}
#     {% for i in ceph_nodes %}
#     {% if i['cluster_ip'] != None and i['cluster_ip'] != "" %}{{ i['cluster_ip'] }}{% elif i['sto_ip'] != None and i['sto_ip'] != "" %}{{ i['sto_ip'] }}{% endif %} {{ i['hostname'] }} {{ i['hostname'] }}.{{ i['domain'] }}
#     {% endfor %}
#     {{ vip }} {{ controller_vhostname }}

- name: set hostname for nodes
  command: "hostnamectl set-hostname {{ hostname }}.{{ domain }}"

- name: stop services
  service:
    name: "{{ item }}"
    state: stopped
    enabled: no
  with_items:
    - NetworkManager
    - firewalld

- name: set selinux config
  lineinfile:
    path: /etc/selinux/config
    regexp: '^SELINUX='
    line: 'SELINUX=disabled'

- name: disable selinux
  selinux: state=disabled

- name: set iptables
  copy: src=iptables dest=/etc/sysconfig/iptables

- name: restart iptables
  service: name=iptables state=restarted enabled=yes
